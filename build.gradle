plugins {
    id 'java'
    id "io.qameta.allure" version '2.7.0'
}

group 'store.ua'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    compile group: 'com.codeborne', name: 'selenide', version: '5.1.0'
    compile group: 'io.qameta.allure', name: 'allure-selenide', version: '2.10.0'

    compile group: 'com.automation-remarks', name: 'video-recorder-junit5', version: '1.+'
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform {
        excludeTags 'slow'
        testLogging {
            events "PASSED", "SKIPPED", "FAILED"
            exceptionFormat = 'full'
        }
    }
}

task fastTest(type: Test) {
    dependsOn 'cleanTest'  // for jenkins reports (make clean run to get fresh JUnit report)
    useJUnitPlatform {
        includeTags 'fast'
    }
}


// To make clean report, we should run './gradlew clean test'
allure {
    autoconfigure = true
    version = '2.10.0'  // Latest Allure Version
    configuration = 'implementation' //to be seen @Step on allure

    useJUnit5 {
        version = '2.10.0' // Latest Allure Version
    }
}

// For using gradle.properties to configure selenide settings
tasks.withType(Test) {
    systemProperties = System.properties
    systemProperties 'file.encoding': 'UTF-8'

    outputs.upToDateWhen { false }
}

/*
test {
   useJUnit {
      includeCategories 'org.gradle.junit.CategoryA'
      excludeCategories 'org.gradle.junit.CategoryB'
   }
}

test {
   include '**my.package.name/*'
}

test {
   exclude '**my.package.name/*'
}
 */